// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.1
// source: lingua-protos/exercise.proto

package genprotos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExerciseCReqUReqForSwagger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId      string `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	Type          string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Question      string `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	Options       string `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
	CorrectAnswer string `protobuf:"bytes,5,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
}

func (x *ExerciseCReqUReqForSwagger) Reset() {
	*x = ExerciseCReqUReqForSwagger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lingua_protos_exercise_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExerciseCReqUReqForSwagger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseCReqUReqForSwagger) ProtoMessage() {}

func (x *ExerciseCReqUReqForSwagger) ProtoReflect() protoreflect.Message {
	mi := &file_lingua_protos_exercise_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseCReqUReqForSwagger.ProtoReflect.Descriptor instead.
func (*ExerciseCReqUReqForSwagger) Descriptor() ([]byte, []int) {
	return file_lingua_protos_exercise_proto_rawDescGZIP(), []int{0}
}

func (x *ExerciseCReqUReqForSwagger) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *ExerciseCReqUReqForSwagger) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExerciseCReqUReqForSwagger) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ExerciseCReqUReqForSwagger) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *ExerciseCReqUReqForSwagger) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

type ExerciseGResUReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LessonId      string `protobuf:"bytes,2,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	Type          string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Question      string `protobuf:"bytes,4,opt,name=question,proto3" json:"question,omitempty"`
	Options       string `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	CorrectAnswer string `protobuf:"bytes,6,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
}

func (x *ExerciseGResUReq) Reset() {
	*x = ExerciseGResUReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lingua_protos_exercise_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExerciseGResUReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseGResUReq) ProtoMessage() {}

func (x *ExerciseGResUReq) ProtoReflect() protoreflect.Message {
	mi := &file_lingua_protos_exercise_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseGResUReq.ProtoReflect.Descriptor instead.
func (*ExerciseGResUReq) Descriptor() ([]byte, []int) {
	return file_lingua_protos_exercise_proto_rawDescGZIP(), []int{1}
}

func (x *ExerciseGResUReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExerciseGResUReq) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *ExerciseGResUReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExerciseGResUReq) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *ExerciseGResUReq) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

func (x *ExerciseGResUReq) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

type ExerciseGAReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonId   string      `protobuf:"bytes,1,opt,name=lesson_id,json=lessonId,proto3" json:"lesson_id,omitempty"`
	Type       string      `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Pagination *Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ExerciseGAReq) Reset() {
	*x = ExerciseGAReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lingua_protos_exercise_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExerciseGAReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseGAReq) ProtoMessage() {}

func (x *ExerciseGAReq) ProtoReflect() protoreflect.Message {
	mi := &file_lingua_protos_exercise_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseGAReq.ProtoReflect.Descriptor instead.
func (*ExerciseGAReq) Descriptor() ([]byte, []int) {
	return file_lingua_protos_exercise_proto_rawDescGZIP(), []int{2}
}

func (x *ExerciseGAReq) GetLessonId() string {
	if x != nil {
		return x.LessonId
	}
	return ""
}

func (x *ExerciseGAReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExerciseGAReq) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ExerciseGARes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exercises []*ExerciseGResUReq `protobuf:"bytes,1,rep,name=exercises,proto3" json:"exercises,omitempty"`
	Count     int64               `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ExerciseGARes) Reset() {
	*x = ExerciseGARes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lingua_protos_exercise_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExerciseGARes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExerciseGARes) ProtoMessage() {}

func (x *ExerciseGARes) ProtoReflect() protoreflect.Message {
	mi := &file_lingua_protos_exercise_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExerciseGARes.ProtoReflect.Descriptor instead.
func (*ExerciseGARes) Descriptor() ([]byte, []int) {
	return file_lingua_protos_exercise_proto_rawDescGZIP(), []int{3}
}

func (x *ExerciseGARes) GetExercises() []*ExerciseGResUReq {
	if x != nil {
		return x.Exercises
	}
	return nil
}

func (x *ExerciseGARes) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_lingua_protos_exercise_proto protoreflect.FileDescriptor

var file_lingua_protos_exercise_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x1a, 0x18, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xaa, 0x01, 0x0a, 0x1a, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x43, 0x52, 0x65,
	0x71, 0x55, 0x52, 0x65, 0x71, 0x46, 0x6f, 0x72, 0x53, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0xb0, 0x01,
	0x0a, 0x10, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x47, 0x52, 0x65, 0x73, 0x55, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x22, 0x74, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x47, 0x41, 0x52, 0x65,
	0x71, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x47, 0x41, 0x52, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63,
	0x69, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x6e,
	0x67, 0x75, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x47, 0x52, 0x65, 0x73,
	0x55, 0x52, 0x65, 0x71, 0x52, 0x09, 0x65, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xc3, 0x02, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x22, 0x2e, 0x6c, 0x69,
	0x6e, 0x67, 0x75, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x43, 0x52, 0x65,
	0x71, 0x55, 0x52, 0x65, 0x71, 0x46, 0x6f, 0x72, 0x53, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x1a,
	0x0c, 0x2e, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x0c, 0x2e, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x2e, 0x42, 0x79, 0x49, 0x44,
	0x1a, 0x18, 0x2e, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69,
	0x73, 0x65, 0x47, 0x52, 0x65, 0x73, 0x55, 0x52, 0x65, 0x71, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x18,
	0x2e, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65,
	0x47, 0x52, 0x65, 0x73, 0x55, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x6c, 0x69, 0x6e, 0x67, 0x75,
	0x61, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x12, 0x0c, 0x2e, 0x6c, 0x69, 0x6e,
	0x67, 0x75, 0x61, 0x2e, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x0c, 0x2e, 0x6c, 0x69, 0x6e, 0x67, 0x75,
	0x61, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x6c, 0x69,
	0x6e, 0x67, 0x75, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x72, 0x63, 0x69, 0x73, 0x65, 0x47, 0x41, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6c, 0x69, 0x6e, 0x67, 0x75, 0x61, 0x2e, 0x45, 0x78, 0x65, 0x72,
	0x63, 0x69, 0x73, 0x65, 0x47, 0x41, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_lingua_protos_exercise_proto_rawDescOnce sync.Once
	file_lingua_protos_exercise_proto_rawDescData = file_lingua_protos_exercise_proto_rawDesc
)

func file_lingua_protos_exercise_proto_rawDescGZIP() []byte {
	file_lingua_protos_exercise_proto_rawDescOnce.Do(func() {
		file_lingua_protos_exercise_proto_rawDescData = protoimpl.X.CompressGZIP(file_lingua_protos_exercise_proto_rawDescData)
	})
	return file_lingua_protos_exercise_proto_rawDescData
}

var file_lingua_protos_exercise_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_lingua_protos_exercise_proto_goTypes = []any{
	(*ExerciseCReqUReqForSwagger)(nil), // 0: lingua.ExerciseCReqUReqForSwagger
	(*ExerciseGResUReq)(nil),           // 1: lingua.ExerciseGResUReq
	(*ExerciseGAReq)(nil),              // 2: lingua.ExerciseGAReq
	(*ExerciseGARes)(nil),              // 3: lingua.ExerciseGARes
	(*Pagination)(nil),                 // 4: lingua.Pagination
	(*ByID)(nil),                       // 5: lingua.ByID
	(*Void)(nil),                       // 6: lingua.Void
}
var file_lingua_protos_exercise_proto_depIdxs = []int32{
	4, // 0: lingua.ExerciseGAReq.pagination:type_name -> lingua.Pagination
	1, // 1: lingua.ExerciseGARes.exercises:type_name -> lingua.ExerciseGResUReq
	0, // 2: lingua.ExerciseService.CreateExercise:input_type -> lingua.ExerciseCReqUReqForSwagger
	5, // 3: lingua.ExerciseService.GetExerciseByID:input_type -> lingua.ByID
	1, // 4: lingua.ExerciseService.UpdateExercise:input_type -> lingua.ExerciseGResUReq
	5, // 5: lingua.ExerciseService.DeleteExercise:input_type -> lingua.ByID
	2, // 6: lingua.ExerciseService.GetAllExercises:input_type -> lingua.ExerciseGAReq
	6, // 7: lingua.ExerciseService.CreateExercise:output_type -> lingua.Void
	1, // 8: lingua.ExerciseService.GetExerciseByID:output_type -> lingua.ExerciseGResUReq
	6, // 9: lingua.ExerciseService.UpdateExercise:output_type -> lingua.Void
	6, // 10: lingua.ExerciseService.DeleteExercise:output_type -> lingua.Void
	3, // 11: lingua.ExerciseService.GetAllExercises:output_type -> lingua.ExerciseGARes
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_lingua_protos_exercise_proto_init() }
func file_lingua_protos_exercise_proto_init() {
	if File_lingua_protos_exercise_proto != nil {
		return
	}
	file_lingua_protos_void_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_lingua_protos_exercise_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ExerciseCReqUReqForSwagger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lingua_protos_exercise_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ExerciseGResUReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lingua_protos_exercise_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ExerciseGAReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lingua_protos_exercise_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ExerciseGARes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lingua_protos_exercise_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lingua_protos_exercise_proto_goTypes,
		DependencyIndexes: file_lingua_protos_exercise_proto_depIdxs,
		MessageInfos:      file_lingua_protos_exercise_proto_msgTypes,
	}.Build()
	File_lingua_protos_exercise_proto = out.File
	file_lingua_protos_exercise_proto_rawDesc = nil
	file_lingua_protos_exercise_proto_goTypes = nil
	file_lingua_protos_exercise_proto_depIdxs = nil
}
